"""verify schema consistency

Revision ID: e1d249b0b87f
Revises: 
Create Date: 2025-06-12 18:07:47.127273

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e1d249b0b87f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'merchants', ['user_id'])
    op.drop_index(op.f('idx_payments_fast'), table_name='payments', postgresql_include=['amount'])
    op.alter_column('reviews', 'booking_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'reviews', ['booking_id'])
    op.create_foreign_key(None, 'reviews', 'bookings', ['booking_id'], ['id'])
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole USING role::userrole")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=sa.Enum('user', 'merchant', 'admin', name='userrole'),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='unique')
    op.alter_column('reviews', 'booking_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('idx_payments_fast'), 'payments', ['status', 'created_at', 'user_id'], unique=False, postgresql_include=['amount'])
    op.drop_constraint(None, 'merchants', type_='unique')
    # ### end Alembic commands ###
